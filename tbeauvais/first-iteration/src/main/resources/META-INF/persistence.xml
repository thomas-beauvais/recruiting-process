<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0"
   xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="
        http://java.sun.com/xml/ns/persistence
        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
	<persistence-unit name="primary">
	   	<!-- If you are running in a production environment, add a managed 
		data source, this example data source is just for development and testing! -->
		
		<!-- The datasource is deployed as WEB-INF/kitchensinkrf-quickstart-ds.xml, you
		can find it in the source at src/main/webapp/WEB-INF/kitchensinkrf-quickstart-ds.xml -->
	    <!-- Eventually we will want to use a JTA data-source -->
	     <jta-data-source>java:jboss/datasources/RecruitingProcess</jta-data-source>
	    
		<!-- But for now, we can use this for testing and first round development -->	    
	    <properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL82Dialect"/>
			<!--<property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>-->
			<!--<property name="hibernate.connection.username" value="postgres"/>-->
			<!--<property name="hibernate.connection.password" value="postgres"/>-->
			<!--<property name="hibernate.connection.url" value="jdbc:postgresql://localhost/recruitingprocess"/>-->
			<property name="hibernate.max_fetch_depth" value="3"/>
			
			<!--<property name="hibernate.connection.autocommit" value="false"/>-->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.hbm2ddl.auto" value="create" />
	        
		</properties>
	</persistence-unit>
</persistence>